apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: emailidentities.sesv2.aws.crossplane.io
spec:
  group: sesv2.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: EmailIDentity
    listKind: EmailIDentityList
    plural: emailidentities
    singular: emailidentity
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EmailIDentity is the Schema for the EmailIDentities API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EmailIDentitySpec defines the desired state of EmailIDentity
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: EmailIDentityParameters defines the desired state of
                  EmailIDentity
                properties:
                  configurationSetName:
                    description: The configuration set to use by default when sending
                      from this identity. Note that any configuration set defined
                      in the email sending request takes precedence.
                    type: string
                  dkimSigningAttributes:
                    description: "If your request includes this object, Amazon SES
                      configures the identity to use Bring Your Own DKIM (BYODKIM)
                      for DKIM authentication purposes, as opposed to the default
                      method, Easy DKIM (https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html).
                      \n You can only specify this object if the email identity is
                      a domain, as opposed to an address."
                    properties:
                      domainSigningPrivateKey:
                        type: string
                      domainSigningSelector:
                        type: string
                    type: object
                  emailIDentity:
                    description: The email address or domain that you want to verify.
                    type: string
                  mailFromAttributes:
                    description: An object that contains information about the Mail-From
                      attributes for the email identity.
                    properties:
                      behaviorOnMxFailure:
                        description: "The action that you want to take if the required
                          MX record can't be found when you send an email. When you
                          set this value to UseDefaultValue, the mail is sent using
                          amazonses.com as the MAIL FROM domain. When you set this
                          value to RejectMessage, the Amazon SES API v2 returns a
                          MailFromDomainNotVerified error, and doesn't attempt to
                          deliver the email. \n These behaviors are taken when the
                          custom MAIL FROM domain configuration is in the Pending,
                          Failed, and TemporaryFailure states."
                        type: string
                      mailFromDomain:
                        description: The domain that you want to use as a MAIL FROM
                          domain.
                        type: string
                      mailFromDomainStatus:
                        description: "The status of the MAIL FROM domain. This status
                          can have the following values: \n    * PENDING – Amazon
                          SES hasn't started searching for the MX record yet. \n    *
                          SUCCESS – Amazon SES detected the required MX record for
                          the MAIL    FROM domain. \n    * FAILED – Amazon SES can't
                          find the required MX record, or the record    no longer
                          exists. \n    * TEMPORARY_FAILURE – A temporary issue occurred,
                          which prevented Amazon    SES from determining the status
                          of the MAIL FROM domain."
                        type: string
                    type: object
                  region:
                    description: Region is which region the EmailIDentity will be
                      created.
                    type: string
                  tags:
                    description: An array of objects that define the tags (keys and
                      values) that you want to associate with the email identity.
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                required:
                - emailIDentity
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EmailIDentityStatus defines the observed state of EmailIDentity.
            properties:
              atProvider:
                description: EmailIDentityObservation defines the observed state of
                  EmailIDentity
                properties:
                  dkimAttributes:
                    description: An object that contains information about the DKIM
                      attributes for the identity.
                    properties:
                      signingAttributesOrigin:
                        type: string
                      signingEnabled:
                        type: boolean
                      status:
                        description: "The DKIM authentication status of the identity.
                          The status can be one of the following: \n    * PENDING
                          – The verification process was initiated, but Amazon SES
                          hasn't    yet detected the DKIM records in the DNS configuration
                          for the domain. \n    * SUCCESS – The verification process
                          completed successfully. \n    * FAILED – The verification
                          process failed. This typically occurs when    Amazon SES
                          fails to find the DKIM records in the DNS configuration
                          of    the domain. \n    * TEMPORARY_FAILURE – A temporary
                          issue is preventing Amazon SES from    determining the DKIM
                          authentication status of the domain. \n    * NOT_STARTED
                          – The DKIM verification process hasn't been initiated    for
                          the domain."
                        type: string
                      tokens:
                        items:
                          type: string
                        type: array
                    type: object
                  identityType:
                    description: The email identity type.
                    type: string
                  verifiedForSendingStatus:
                    description: Specifies whether or not the identity is verified.
                      You can only send email from verified email addresses or domains.
                      For more information about verifying identities, see the Amazon
                      Pinpoint User Guide (https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html).
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
